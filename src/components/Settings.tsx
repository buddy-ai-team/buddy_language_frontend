import BigRobot from "../images/ImgSetting/BigRobot.png";
import Arrow from "../images/Img/Arrow.png";
import Robot from "../images/Img/Robot.png";
import { StProps } from "../types";
import Select, { SelectChangeEvent } from "@mui/material/Select";
import * as React from "react";
import {
  InputLabel,
  MenuItem,
  FormControl,
  Box,
  Link,
  Slider,
} from "@mui/material";

import {
  Property1Default,
  ImgBigRobot,
  TopBar,
  Content,
  IcLeft,
  Shape,
  TitleSetting,
  IconBox,
  IconRobot,
  ImgRobot,
  SectionTitle,
  Text,
  Title,
  ListSounds,
  BoxIconSound1,
  IconSound1,
  BoxTitleSound1,
  TitleVoice,
  Item1,
  BoxIconSound2,
  IconSound2,
  BoxTitleSound2,
  Item2,
  SectionRoleBot,
  TitleRoleBot,
  SectionRoleBot1,
  TitleRole,
  InputRoleBot,
  SectionRoleBot2,
  GroupDescriptionRole,
  DescriptionRole,
  GroupButton,
  ButtonExit,
  TitleButtonExit,
  TitleButtonSave,
  ButtonSave,
  SelectLanguage,
  SectionLanguage,
  LanguageTitle,
  SectionVoiceSpeed,
  BoxVoiceSpeed,
  SectionRoleBot3,
  ApplyingExistingRoles,
} from "./StyleSettings";

export default function Settings(props: StProps): JSX.Element {
  const [nativeLanguage, setNativeLanguage] = React.useState("");
  const [learningLanguage, setLearningLanguage] = React.useState("");
  const [voiceType, setVoiceType] = React.useState("");
  const [selectedRole, setSelectedRole] = React.useState("");
  const marks = [
    {
      value: 0,
      label: "0.5x",
    },
    {
      value: 1,
      label: "1x",
    },
    {
      value: 2,
      label: "1.5x",
    },
    {
      value: 3,
      label: "2x",
    },
    {
      value: 4,
      label: "2.5x",
    },
  ];

  const handleChange = (event: SelectChangeEvent) => {
    setSelectedRole(event.target.value);
  };

  function valueLabelFormat(value: number) {
    return marks.findIndex((mark) => mark.value === value) + 1;
  }

  const handleNativeLanguageChange = (event: SelectChangeEvent) => {
    const selectedLanguage = event.target.value as string;
    if (selectedLanguage !== learningLanguage) {
      setNativeLanguage(selectedLanguage);
    } else {
      console.log("–†–æ–¥–Ω–æ–π —è–∑—ã–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –∏–∑—É—á–∞–µ–º—ã–º");
    }
  };

  const handleLearningLanguageChange = (event: SelectChangeEvent) => {
    const selectedLanguage = event.target.value as string;
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ–±—ã –≤—ã–±—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –Ω–µ —Å–æ–≤–ø–∞–¥–∞–ª —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–æ–¥–Ω—ã–º —è–∑—ã–∫–æ–º
    if (selectedLanguage !== nativeLanguage) {
      setLearningLanguage(selectedLanguage);
    } else {
      console.log("–ò–∑—É—á–∞–µ–º—ã–π —è–∑—ã–∫ –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–æ–¥–Ω—ã–º");
    }

    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —è–∑—ã–∫–æ–≤
    if (selectedLanguage === nativeLanguage) {
      console.log("–†–æ–¥–Ω–æ–π –∏ –∏–∑—É—á–∞–µ–º—ã–π —è–∑—ã–∫–∏ –Ω–µ –º–æ–≥—É—Ç —Å–æ–≤–ø–∞–¥–∞—Ç—å");
    }
  };

  const handleVoiceTypeChange = (selectedVoice: string) => {
    setVoiceType(selectedVoice);
  };

  return (
    <Property1Default className={props.TelegramId}>
      <ImgBigRobot src={BigRobot} loading="lazy" alt={"Big Robot"} />
      <TopBar>
        <Content>
          <Link href="/">
            <IcLeft>
              <Shape src={Arrow} loading="lazy" alt={"Arrow"} />
            </IcLeft>
          </Link>
          <TitleSetting>{`–ù–∞—Å—Ç—Ä–æ–π–∫–∏`}</TitleSetting>
          <IconBox>
            <IconRobot>
              <ImgRobot src={Robot} loading="lazy" alt={"Robot Icon"} />
            </IconRobot>
          </IconBox>
        </Content>
      </TopBar>
      <SectionTitle>
        <Text>
          <Title>{`–ì–æ–ª–æ—Å–æ–≤–æ–π –≤—ã–±–æ—Ä –±–æ—Ç–∞`}</Title>
        </Text>
      </SectionTitle>
      <ListSounds>
        <Item1 onClick={() => handleVoiceTypeChange("male")}>
          <BoxIconSound1
            style={{
              backgroundColor: voiceType === "male" ? "#204981" : "transparent",
            }}
          >
            <IconSound1>{`üîä`}</IconSound1>
          </BoxIconSound1>
          <BoxTitleSound1
            style={{
              textDecorationColor:
                voiceType === "male" ? "#7FFFD4" : "transparent",
            }}
          >
            <TitleVoice>{`–ú—É–∂—Å–∫–æ–π –≥–æ–ª–æ—Å`}</TitleVoice>
          </BoxTitleSound1>
        </Item1>
        <div style={{ borderBottom: "1px solid #B1BCCD", width: "100%" }} />
        <Item2 onClick={() => handleVoiceTypeChange("female")}>
          <BoxIconSound2
            style={{
              backgroundColor:
                voiceType === "female" ? "#204981" : "transparent",
            }}
          >
            <IconSound2>{`üîä`}</IconSound2>
          </BoxIconSound2>
          <BoxTitleSound2>
            <TitleVoice>{`–ñ–µ–Ω—Å–∫–∏–π –≥–æ–ª–æ—Å`}</TitleVoice>
          </BoxTitleSound2>
        </Item2>
        <div style={{ borderBottom: "1px solid #B1BCCD", width: "100%" }} />
      </ListSounds>
      <SectionVoiceSpeed>
        <Title>{`–°–∫–æ—Ä–æ—Å—Ç—å –≥–æ–ª–æ—Å–∞`}</Title>
        <BoxVoiceSpeed>
          <Slider
            aria-label="Restricted values"
            defaultValue={1}
            valueLabelFormat={valueLabelFormat}
            //getAriaValueText={valuetext}
            step={null}
            valueLabelDisplay="off"
            marks={marks}
            max={4}
          />
        </BoxVoiceSpeed>
      </SectionVoiceSpeed>
      <SectionRoleBot>
        <TitleRoleBot>
          <Title>{`–í—ã–±—Ä–∞—Ç—å —Ä–æ–ª—å –±–æ—Ç–∞`}</Title>
        </TitleRoleBot>
      </SectionRoleBot>
      <SectionRoleBot1>
        <TitleRole>{`–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–ª–∏`}</TitleRole>
        <InputRoleBot placeholder="–í–≤–æ–¥ —Ä–æ–ª–∏ –±–æ—Ç–∞" />
      </SectionRoleBot1>
      <SectionRoleBot2>
        <TitleRole>{`–û–ø–∏—Å–∞–Ω–∏–µ —Ä–æ–ª–∏`}</TitleRole>
        <GroupDescriptionRole>
          <DescriptionRole placeholder="–í–≤–æ–¥ –æ–ø–∏—Å–∞–Ω–∏—è —Ä–æ–ª–∏" />
        </GroupDescriptionRole>
      </SectionRoleBot2>
      <SectionRoleBot3>
        <TitleRole>{`–°—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ä–æ–ª–∏`}</TitleRole>
        <ApplyingExistingRoles>
          <FormControl fullWidth>
            <InputLabel>–†–æ–ª–∏</InputLabel>
            <Select
              id="SelectRole"
              value={selectedRole}
              onChange={handleChange}
            >
              <MenuItem value={10}>Default</MenuItem>
            </Select>
          </FormControl>
        </ApplyingExistingRoles>
      </SectionRoleBot3>
      <SectionLanguage>
        <LanguageTitle>
          <Title>{`–í—ã–±—Ä–∞—Ç—å —è–∑—ã–∫`}</Title>
        </LanguageTitle>
      </SectionLanguage>
      <SelectLanguage>
        <Box
          sx={{
            display: "inline-flex",
            position: "relative",
            border: "#001434",
            isolation: "isolate",
            flex: 1,
            marginRight: "4px",
          }}
        >
          <FormControl fullWidth>
            <InputLabel>–†–æ–¥–Ω–æ–π —è–∑—ã–∫</InputLabel>
            <Select
              id="SelectNativeLangue"
              value={nativeLanguage}
              onChange={handleNativeLanguageChange}
            >
              <MenuItem value={"–†—É—Å—Å–∫–∏–π"}>–†—É—Å—Å–∫–∏–π</MenuItem>
              <MenuItem value={"–ê–Ω–≥–ª–∏–π—Å–∫–∏–π"}>–ê–Ω–≥–ª–∏–π—Å–∫–∏–π</MenuItem>
              <MenuItem value={"–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π"}>–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π</MenuItem>
              <MenuItem value={"–ù–µ–º–µ—Ü–∫–∏–π"}>–ù–µ–º–µ—Ü–∫–∏–π</MenuItem>
              <MenuItem value={"–ê—Ä–∞–±—Å–∫–∏–π"}>–ê—Ä–∞–±—Å–∫–∏–π</MenuItem>
              <MenuItem value={"–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π"}>–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π</MenuItem>
            </Select>
          </FormControl>
        </Box>
        <Box
          sx={{
            display: "inline-flex",
            position: "relative",
            border: "#001434",
            isolation: "isolate",
            flex: 1,
            marginLeft: "4px",
          }}
        >
          <FormControl fullWidth>
            <InputLabel>–ò–∑—É—á–∞–µ–º—ã–π —è–∑—ã–∫</InputLabel>
            <Select
              id="SelectStudingLanguage"
              value={learningLanguage}
              onChange={handleLearningLanguageChange}
            >
              <MenuItem
                value={"–†—É—Å—Å–∫–∏–π"}
                disabled={nativeLanguage === "–†—É—Å—Å–∫–∏–π"}
              >
                –†—É—Å—Å–∫–∏–π
              </MenuItem>
              <MenuItem
                value={"–ê–Ω–≥–ª–∏–π—Å–∫–∏–π"}
                disabled={nativeLanguage === "–ê–Ω–≥–ª–∏–π—Å–∫–∏–π"}
              >
                –ê–Ω–≥–ª–∏–π—Å–∫–∏–π
              </MenuItem>
              <MenuItem
                value={"–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π"}
                disabled={nativeLanguage === "–§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π"}
              >
                –§—Ä–∞–Ω—Ü—É–∑—Å–∫–∏–π
              </MenuItem>
              <MenuItem
                value={"–ù–µ–º–µ—Ü–∫–∏–π"}
                disabled={nativeLanguage === "–ù–µ–º–µ—Ü–∫–∏–π"}
              >
                –ù–µ–º–µ—Ü–∫–∏–π
              </MenuItem>
              <MenuItem
                value={"–ê—Ä–∞–±—Å–∫–∏–π"}
                disabled={nativeLanguage === "–ê—Ä–∞–±—Å–∫–∏–π"}
              >
                –ê—Ä–∞–±—Å–∫–∏–π
              </MenuItem>
              <MenuItem
                value={"–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π"}
                disabled={nativeLanguage === "–ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π"}
              >
                –ò—Ç–∞–ª—å—è–Ω—Å–∫–∏–π
              </MenuItem>
            </Select>
          </FormControl>
        </Box>
      </SelectLanguage>
      <GroupButton>
        <ButtonExit variant="contained" href="/">
          <TitleButtonExit>{`–í—ã–π—Ç–∏`}</TitleButtonExit>
        </ButtonExit>
        <ButtonSave variant="contained" href="/">
          <TitleButtonSave>{`–°–æ—Ö—Ä–∞–Ω–∏—Ç—å`}</TitleButtonSave>
        </ButtonSave>
      </GroupButton>
    </Property1Default>
  );
}
