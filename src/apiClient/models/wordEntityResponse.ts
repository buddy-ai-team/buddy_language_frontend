// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';
import { type Guid } from 'guid-typescript';

export function createWordEntityResponseFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoWordEntityResponse;
}
export function deserializeIntoWordEntityResponse(wordEntityResponse: WordEntityResponse | undefined = {} as WordEntityResponse) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { wordEntityResponse.accountId = n.getGuidValue(); },
        "id": n => { wordEntityResponse.id = n.getGuidValue(); },
        "language": n => { wordEntityResponse.language = n.getNumberValue(); },
        "status": n => { wordEntityResponse.status = n.getNumberValue(); },
        "word": n => { wordEntityResponse.word = n.getStringValue(); },
    }
}
export function serializeWordEntityResponse(writer: SerializationWriter, wordEntityResponse: WordEntityResponse | undefined = {} as WordEntityResponse) : void {
        writer.writeGuidValue("accountId", wordEntityResponse.accountId);
        writer.writeGuidValue("id", wordEntityResponse.id);
        writer.writeNumberValue("language", wordEntityResponse.language);
        writer.writeNumberValue("status", wordEntityResponse.status);
        writer.writeStringValue("word", wordEntityResponse.word);
}
export interface WordEntityResponse extends Parsable {
    /**
     * The accountId property
     */
    accountId?: Guid;
    /**
     * The id property
     */
    id?: Guid;
    /**
     * The language property
     */
    language?: number;
    /**
     * The status property
     */
    status?: number;
    /**
     * The word property
     */
    word?: string;
}
// tslint:enable
// eslint-enable
