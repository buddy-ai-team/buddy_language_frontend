// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';
import { type Guid } from 'guid-typescript';

export interface AddWordEntityRequest extends Parsable {
    /**
     * The accountId property
     */
    accountId?: Guid;
    /**
     * The language property
     */
    language?: number;
    /**
     * The status property
     */
    status?: number;
    /**
     * The word property
     */
    word?: string;
}
export function createAddWordEntityRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoAddWordEntityRequest;
}
export function deserializeIntoAddWordEntityRequest(addWordEntityRequest: AddWordEntityRequest | undefined = {} as AddWordEntityRequest) : Record<string, (node: ParseNode) => void> {
    return {
        "accountId": n => { addWordEntityRequest.accountId = n.getGuidValue(); },
        "language": n => { addWordEntityRequest.language = n.getNumberValue(); },
        "status": n => { addWordEntityRequest.status = n.getNumberValue(); },
        "word": n => { addWordEntityRequest.word = n.getStringValue(); },
    }
}
export function serializeAddWordEntityRequest(writer: SerializationWriter, addWordEntityRequest: AddWordEntityRequest | undefined = {} as AddWordEntityRequest) : void {
        writer.writeGuidValue("accountId", addWordEntityRequest.accountId);
        writer.writeNumberValue("language", addWordEntityRequest.language);
        writer.writeNumberValue("status", addWordEntityRequest.status);
        writer.writeStringValue("word", addWordEntityRequest.word);
}
// tslint:enable
// eslint-enable
