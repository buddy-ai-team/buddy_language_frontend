// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';
import { type Guid } from 'guid-typescript';

export function createUpdateUserRequestFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUpdateUserRequest;
}
export function deserializeIntoUpdateUserRequest(updateUserRequest: UpdateUserRequest | undefined = {} as UpdateUserRequest) : Record<string, (node: ParseNode) => void> {
    return {
        "firstName": n => { updateUserRequest.firstName = n.getStringValue(); },
        "id": n => { updateUserRequest.id = n.getGuidValue(); },
        "lastName": n => { updateUserRequest.lastName = n.getStringValue(); },
        "telegramId": n => { updateUserRequest.telegramId = n.getStringValue(); },
    }
}
export function serializeUpdateUserRequest(writer: SerializationWriter, updateUserRequest: UpdateUserRequest | undefined = {} as UpdateUserRequest) : void {
        writer.writeStringValue("firstName", updateUserRequest.firstName);
        writer.writeGuidValue("id", updateUserRequest.id);
        writer.writeStringValue("lastName", updateUserRequest.lastName);
        writer.writeStringValue("telegramId", updateUserRequest.telegramId);
}
export interface UpdateUserRequest extends Parsable {
    /**
     * The firstName property
     */
    firstName?: string;
    /**
     * The id property
     */
    id?: Guid;
    /**
     * The lastName property
     */
    lastName?: string;
    /**
     * The telegramId property
     */
    telegramId?: string;
}
// tslint:enable
// eslint-enable
