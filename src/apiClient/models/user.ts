// tslint:disable
// eslint-disable
// Generated by Microsoft Kiota
import { createPreferencesFromDiscriminatorValue, serializePreferences, type Preferences } from './preferences';
import { createWordEntityFromDiscriminatorValue, serializeWordEntity, type WordEntity } from './wordEntity';
import { type Parsable, type ParseNode, type SerializationWriter } from '@microsoft/kiota-abstractions';
import { type Guid } from 'guid-typescript';

export function createUserFromDiscriminatorValue(parseNode: ParseNode | undefined) {
    if(!parseNode) throw new Error("parseNode cannot be undefined");
    return deserializeIntoUser;
}
export function deserializeIntoUser(user: User | undefined = {} as User) : Record<string, (node: ParseNode) => void> {
    return {
        "firstName": n => { user.firstName = n.getStringValue(); },
        "id": n => { user.id = n.getGuidValue(); },
        "lastName": n => { user.lastName = n.getStringValue(); },
        "telegramId": n => { user.telegramId = n.getStringValue(); },
        "userPreferences": n => { user.userPreferences = n.getObjectValue<Preferences>(createPreferencesFromDiscriminatorValue); },
        "wordEntities": n => { user.wordEntities = n.getCollectionOfObjectValues<WordEntity>(createWordEntityFromDiscriminatorValue); },
    }
}
export function serializeUser(writer: SerializationWriter, user: User | undefined = {} as User) : void {
        writer.writeStringValue("firstName", user.firstName);
        writer.writeGuidValue("id", user.id);
        writer.writeStringValue("lastName", user.lastName);
        writer.writeStringValue("telegramId", user.telegramId);
        writer.writeObjectValue<Preferences>("userPreferences", user.userPreferences, serializePreferences);
        writer.writeCollectionOfObjectValues<WordEntity>("wordEntities", user.wordEntities, serializeWordEntity);
}
export interface User extends Parsable {
    /**
     * The firstName property
     */
    firstName?: string;
    /**
     * The id property
     */
    id?: Guid;
    /**
     * The lastName property
     */
    lastName?: string;
    /**
     * The telegramId property
     */
    telegramId?: string;
    /**
     * The userPreferences property
     */
    userPreferences?: Preferences;
    /**
     * The wordEntities property
     */
    wordEntities?: WordEntity[];
}
// tslint:enable
// eslint-enable
